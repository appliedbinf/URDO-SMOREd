# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
#test:
#  override:
#    - py.test tests
jobs:
    build:
        docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
        - image: circleci/python:3.6.1
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

        working_directory: ~/repo

        steps:
            - checkout

          # Download and cache dependencies
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "requirements.txt" }}
              # fallback to using the latest cache if no exact match is found
                    - v1-dependencies-

            - run:
                name: install dependencies
                command: |
                    python3 -m venv venv
                    . venv/bin/activate
                    pip install pytest pytest-cov coverage codecov

            - save_cache:
                paths:
                    - ./venv
                key: v1-dependencies-{{ checksum "requirements.txt" }}
            
            - run:
                name: run tests
                command: |
                    . venv/bin/activate
                    pytest tests -v

            - run:
                name: Coverage tests
                command: |
                    . venv/bin/activate
                    wget https://github.com/torognes/vsearch/releases/download/v2.8.4/vsearch-2.8.4-linux-x86_64.tar.gz
                    tar xf vsearch-2.8.4-linux-x86_64.tar.gz
                    export PATH=$PWD/vsearch-2.8.4-linux-x86_64/bin:$PATH 
                    coverage run  -m smored --buildDB -c tests/db/expanded_config.txt -P tests/db/db -k 35
                    coverage run -a -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -1 tests/reads/MID-2_S2_L001_R1_001.fastq -2 tests/reads/MID-2_S2_L001_R2_001.fastq
                    coverage run -a -m smored -h
                    coverage run -a  -m smored -v
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -a logfile.txt
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -t a -o outfile
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -t a -o outfile
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -t a -o outfile -x -r -R readout
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -t a -w
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -t 2
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -r -R folder
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -u
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -u -U folder
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/bad_reads
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -1 tests/bad_reads/bad_S1_L001_R1_001.fastq -2 tests/bad_reads/bad_S1_L001_R2_001.fastq
                    coverage run -a -m smored --predict --buildDB
                    coverage run -a -m smored
                    coverage run -a -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -1 tests/reads/MID-2_S2_L001_R1_001.fastq -2 tests/reads/MID-2_S2_L001_R2_001.fastq -d tests/reads/
                    coverage run -a -m pytest tests
                    coverage combine
                    coverage xml
                    coverage report 
                    codecov

            - store_artifacts:
                path: test-reports
                destination: test-reports
              

# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
#test:
#  override:
#    - py.test tests
jobs:
    test:
        docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
        - image: continuumio/miniconda3
        working_directory: ~/repo
        steps:
            - checkout

          # Download and cache dependencies
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "requirements.txt" }}
              # fallback to using the latest cache if no exact match is found
                    - v1-dependencies-

            - run:
                name: install dependencies
                command: |
                    conda config --add channels defaults
                    conda config --add channels bioconda
                    conda config --add channels conda-forge
                    conda install pytest pytest-cov coverage codecov pathlib lxml openpyxl vsearch
            
            - run:
                name: run tests
                command: |
                    pytest tests -v

            - run:
                name: Coverage tests
                command: |
                    coverage run  -m smored --buildDB -c tests/db/expanded_config.txt -P tests/db/db -k 35
                    coverage run  -m smored --buildDB -c tests/db/expanded_config.txt
                    coverage run  -m smored --buildDB -c tests/db/bad_config.txt -P tests/db/db -k 35
                    export URDO_DEFAULT_CONFIG='~/repo/tests/db/expanded_config.txt'
                    coverage run  -m smored --buildDB -P tests/db/db -k 35
                    coverage run -a -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -1 tests/reads/MID-2_S2_L001_R1_001.fastq -2 tests/reads/MID-2_S2_L001_R2_001.fastq
                    coverage run -a -m smored -h
                    coverage run -a  -m smored -v
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -a logfile.txt
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads --report 
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -t a -o outfile
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -t 2 -o outfile
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -t 2 -o outfile -x
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -t 2 -o outfile -x -r -R readout
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -t 2
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -r -R folder
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -u
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/reads -u -U folder
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -d tests/bad_reads
                    coverage run -a  -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -1 tests/bad_reads/bad_S1_L001_R1_001.fastq -2 tests/bad_reads/bad_S1_L001_R2_001.fastq
                    coverage run -a -m smored --predict --buildDB
                    coverage run -a -m smored
                    coverage run -a -m smored --predict -c tests/db/expanded_config.txt -P tests/db/db -1 tests/reads/MID-2_S2_L001_R1_001.fastq -2 tests/reads/MID-2_S2_L001_R2_001.fastq -d tests/reads/
                    coverage run -a -m pytest tests
                    coverage combine
                    coverage xml
                    coverage report 
                    codecov

    build:
        docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
        - image: continuumio/miniconda3
        working_directory: ~/repo
        steps:
            - checkout
            - run:
                name: install dependencies
                command: |
                    conda config --add channels defaults
                    conda config --add channels bioconda
                    conda config --add channels conda-forge
                    conda install constructor -y
            - run:
                name: create installer
                command: |
                    cd installer
                    constructor .
                    mkdir ~/installer
                    cp SMOREd*.sh ~/installer
            - store_artifacts:
                path: ~/installer
            - persist_to_workspace:
                root: ~/installer
                paths: SMOREd*.sh


    publish:
            docker:
              - image: cibuilds/github:0.10
            steps:
              - attach_workspace:
                  at: ./installer
              - run:
                  name: "Publish Release on GitHub"
                  command: |
                    if [ -z ${CIRCLE_TAG} ]; then VERSION=$(echo $CIRCLE_SHA1 | cut -c -7); else VERSION=${CIRCLE_TAG}; fi
                    ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./installer
                  
workflows:
  version: 2
  test_only:
    jobs:
      - test
  test_and_upload:
    jobs:
      - build
      - publish:
            requires:
                - build
            filters:
                tags:
                  only: /^v.*/




